{"ast":null,"code":"var _jsxFileName = \"/Users/kimchung-yeon/\\u110B\\u1175\\u11AB\\u1100\\u1162\\u110B\\u1175\\u11AB\\u1100\\u1162/\\u110F\\u1165\\u1109\\u1165\\u1106\\u116F\\u1103\\u116C\\u11AF\\u1105\\u1162/greenflow/frontend/src/components/InsightCard.tsx\";\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsightCard = ({\n  insight\n}) => {\n  const getCardStyles = type => {\n    switch (type) {\n      case 'achievement':\n        return 'bg-gradient-to-br from-green-50 to-green-100 border-green-200';\n      case 'tip':\n        return 'bg-gradient-to-br from-blue-50 to-blue-100 border-blue-200';\n      case 'warning':\n        return 'bg-gradient-to-br from-red-50 to-red-100 border-red-200';\n      case 'celebration':\n        return 'bg-gradient-to-br from-purple-50 to-purple-100 border-purple-200';\n      default:\n        return 'bg-gradient-to-br from-gray-50 to-gray-100 border-gray-200';\n    }\n  };\n  const getIconStyles = type => {\n    switch (type) {\n      case 'achievement':\n        return 'text-green-600';\n      case 'tip':\n        return 'text-blue-600';\n      case 'warning':\n        return 'text-red-600';\n      case 'celebration':\n        return 'text-purple-600';\n      default:\n        return 'text-gray-600';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    whileHover: {\n      scale: 1.02\n    },\n    className: `rounded-xl border p-6 hover:shadow-lg transition-all ${getCardStyles(insight.type)}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-start space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-2xl ${getIconStyles(insight.type)}`,\n        children: insight.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-gray-800 mb-2\",\n          children: insight.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-sm mb-4\",\n          children: insight.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `text-sm font-medium hover:underline ${getIconStyles(insight.type)}`,\n          children: insight.action_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = InsightCard;\nexport default InsightCard;\nvar _c;\n$RefreshReg$(_c, \"InsightCard\");","map":{"version":3,"names":["React","motion","jsxDEV","_jsxDEV","InsightCard","insight","getCardStyles","type","getIconStyles","div","initial","opacity","y","animate","whileHover","scale","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","title","message","action_text","_c","$RefreshReg$"],"sources":["/Users/kimchung-yeon/인개인개/커서뭐될래/greenflow/frontend/src/components/InsightCard.tsx"],"sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\nimport { InsightCard as InsightCardType } from '../types';\n\ninterface InsightCardProps {\n  insight: InsightCardType;\n}\n\nconst InsightCard: React.FC<InsightCardProps> = ({ insight }) => {\n  const getCardStyles = (type: string) => {\n    switch (type) {\n      case 'achievement':\n        return 'bg-gradient-to-br from-green-50 to-green-100 border-green-200';\n      case 'tip':\n        return 'bg-gradient-to-br from-blue-50 to-blue-100 border-blue-200';\n      case 'warning':\n        return 'bg-gradient-to-br from-red-50 to-red-100 border-red-200';\n      case 'celebration':\n        return 'bg-gradient-to-br from-purple-50 to-purple-100 border-purple-200';\n      default:\n        return 'bg-gradient-to-br from-gray-50 to-gray-100 border-gray-200';\n    }\n  };\n\n  const getIconStyles = (type: string) => {\n    switch (type) {\n      case 'achievement':\n        return 'text-green-600';\n      case 'tip':\n        return 'text-blue-600';\n      case 'warning':\n        return 'text-red-600';\n      case 'celebration':\n        return 'text-purple-600';\n      default:\n        return 'text-gray-600';\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      whileHover={{ scale: 1.02 }}\n      className={`rounded-xl border p-6 hover:shadow-lg transition-all ${getCardStyles(insight.type)}`}\n    >\n      <div className=\"flex items-start space-x-4\">\n        <div className={`text-2xl ${getIconStyles(insight.type)}`}>\n          {insight.icon}\n        </div>\n        <div className=\"flex-1\">\n          <h3 className=\"font-semibold text-gray-800 mb-2\">\n            {insight.title}\n          </h3>\n          <p className=\"text-gray-600 text-sm mb-4\">\n            {insight.message}\n          </p>\n          <button className={`text-sm font-medium hover:underline ${getIconStyles(insight.type)}`}>\n            {insight.action_text}\n          </button>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default InsightCard; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvC,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC/D,MAAMC,aAAa,GAAIC,IAAY,IAAK;IACtC,QAAQA,IAAI;MACV,KAAK,aAAa;QAChB,OAAO,+DAA+D;MACxE,KAAK,KAAK;QACR,OAAO,4DAA4D;MACrE,KAAK,SAAS;QACZ,OAAO,yDAAyD;MAClE,KAAK,aAAa;QAChB,OAAO,kEAAkE;MAC3E;QACE,OAAO,4DAA4D;IACvE;EACF,CAAC;EAED,MAAMC,aAAa,GAAID,IAAY,IAAK;IACtC,QAAQA,IAAI;MACV,KAAK,aAAa;QAChB,OAAO,gBAAgB;MACzB,KAAK,KAAK;QACR,OAAO,eAAe;MACxB,KAAK,SAAS;QACZ,OAAO,cAAc;MACvB,KAAK,aAAa;QAChB,OAAO,iBAAiB;MAC1B;QACE,OAAO,eAAe;IAC1B;EACF,CAAC;EAED,oBACEJ,OAAA,CAACF,MAAM,CAACQ,GAAG;IACTC,OAAO,EAAE;MAAEC,OAAO,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAG,CAAE;IAC/BC,OAAO,EAAE;MAAEF,OAAO,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAE;IAC9BE,UAAU,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAE;IAC5BC,SAAS,EAAE,wDAAwDV,aAAa,CAACD,OAAO,CAACE,IAAI,CAAC,EAAG;IAAAU,QAAA,eAEjGd,OAAA;MAAKa,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCd,OAAA;QAAKa,SAAS,EAAE,YAAYR,aAAa,CAACH,OAAO,CAACE,IAAI,CAAC,EAAG;QAAAU,QAAA,EACvDZ,OAAO,CAACa;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACNnB,OAAA;QAAKa,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBd,OAAA;UAAIa,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAC7CZ,OAAO,CAACkB;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACLnB,OAAA;UAAGa,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EACtCZ,OAAO,CAACmB;QAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACJnB,OAAA;UAAQa,SAAS,EAAE,uCAAuCR,aAAa,CAACH,OAAO,CAACE,IAAI,CAAC,EAAG;UAAAU,QAAA,EACrFZ,OAAO,CAACoB;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB,CAAC;AAACI,EAAA,GAxDItB,WAAuC;AA0D7C,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}