{"ast":null,"code":"import React,{useState,useEffect}from'react';import{motion,AnimatePresence}from'framer-motion';import{Trophy,Lock,Star,Calendar,Users,Target,Award}from'lucide-react';import{apiService}from'../services/api';import toast from'react-hot-toast';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const badgeCategories=[{id:'all',name:'전체',icon:Trophy,color:'text-yellow-500'},{id:'milestones',name:'마일스톤',icon:Target,color:'text-blue-500'},{id:'streaks',name:'연속 달성',icon:Calendar,color:'text-green-500'},{id:'achievements',name:'특별 성취',icon:Star,color:'text-purple-500'},{id:'social',name:'소셜',icon:Users,color:'text-pink-500'}];const getBadgeIcon=badgeType=>{const iconMap={'first_meal':'🍽️','first_swap':'🔄','week_streak':'📅','month_streak':'🗓️','carbon_saver':'🌱','eco_warrior':'🌍','challenge_master':'🏆','social_sharer':'📢','data_enthusiast':'📊','consistency_king':'👑','green_pioneer':'🌿','impact_maker':'⭐'};return iconMap[badgeType]||'🏅';};const getBadgeRarity=badgeType=>{const rarityMap={'first_meal':{rarity:'Common',color:'border-gray-300 bg-gray-50',glow:'shadow-gray-200'},'first_swap':{rarity:'Common',color:'border-green-300 bg-green-50',glow:'shadow-green-200'},'week_streak':{rarity:'Rare',color:'border-blue-300 bg-blue-50',glow:'shadow-blue-200'},'month_streak':{rarity:'Epic',color:'border-purple-300 bg-purple-50',glow:'shadow-purple-200'},'carbon_saver':{rarity:'Rare',color:'border-green-400 bg-green-100',glow:'shadow-green-300'},'eco_warrior':{rarity:'Legendary',color:'border-yellow-400 bg-yellow-50',glow:'shadow-yellow-300'},'challenge_master':{rarity:'Epic',color:'border-purple-400 bg-purple-100',glow:'shadow-purple-300'},'social_sharer':{rarity:'Common',color:'border-pink-300 bg-pink-50',glow:'shadow-pink-200'},'data_enthusiast':{rarity:'Rare',color:'border-indigo-300 bg-indigo-50',glow:'shadow-indigo-200'},'consistency_king':{rarity:'Epic',color:'border-orange-400 bg-orange-100',glow:'shadow-orange-300'},'green_pioneer':{rarity:'Legendary',color:'border-emerald-400 bg-emerald-100',glow:'shadow-emerald-300'},'impact_maker':{rarity:'Legendary',color:'border-yellow-500 bg-yellow-100',glow:'shadow-yellow-400'}};return rarityMap[badgeType]||{rarity:'Common',color:'border-gray-300 bg-gray-50',glow:'shadow-gray-200'};};export const BadgeCollection=_ref=>{let{className=''}=_ref;const[badges,setBadges]=useState([]);const[userBadges,setUserBadges]=useState([]);const[loading,setLoading]=useState(true);const[selectedCategory,setSelectedCategory]=useState('all');const[selectedBadge,setSelectedBadge]=useState(null);useEffect(()=>{fetchBadgeData();},[]);const fetchBadgeData=async()=>{try{const[badgesResponse,userBadgesResponse]=await Promise.all([apiService.get('/api/challenges/badges'),apiService.get('/api/challenges/my-badges')]);setBadges(badgesResponse.data||[]);setUserBadges(userBadgesResponse.data||[]);}catch(error){console.error('Failed to fetch badge data:',error);toast.error('배지 정보를 불러오는데 실패했습니다.');}finally{setLoading(false);}};const getEarnedBadge=badgeId=>{return userBadges.find(ub=>ub.badge.id===badgeId);};const isEarned=badgeId=>{return!!getEarnedBadge(badgeId);};const filteredBadges=badges.filter(badge=>{if(selectedCategory==='all')return true;return badge.category===selectedCategory;});const earnedCount=badges.filter(badge=>isEarned(badge.id)).length;const completionPercentage=badges.length>0?Math.round(earnedCount/badges.length*100):0;if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center p-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-500\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:`bg-white rounded-xl shadow-lg p-6 ${className}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3 mb-4\",children:[/*#__PURE__*/_jsx(Trophy,{className:\"w-8 h-8 text-yellow-500\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-800\",children:\"\\uBC30\\uC9C0 \\uCEEC\\uB809\\uC158\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600\",children:[earnedCount,\"/\",badges.length,\" \\uAC1C \\uD68D\\uB4DD (\",completionPercentage,\"% \\uC644\\uB8CC)\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-3 mb-4\",children:/*#__PURE__*/_jsx(motion.div,{initial:{width:0},animate:{width:`${completionPercentage}%`},transition:{duration:1,ease:\"easeOut\"},className:\"bg-gradient-to-r from-green-400 to-blue-500 h-3 rounded-full relative\",children:/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-white opacity-30 rounded-full animate-pulse\"})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-2 mb-6 overflow-x-auto\",children:badgeCategories.map(category=>{const Icon=category.icon;return/*#__PURE__*/_jsxs(motion.button,{whileHover:{scale:1.05},whileTap:{scale:0.95},onClick:()=>setSelectedCategory(category.id),className:`flex items-center gap-2 px-4 py-2 rounded-lg whitespace-nowrap transition-all ${selectedCategory===category.id?'bg-green-500 text-white shadow-md':'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,children:[/*#__PURE__*/_jsx(Icon,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:category.name})]},category.id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\",children:/*#__PURE__*/_jsx(AnimatePresence,{children:filteredBadges.map((badge,index)=>{const earned=isEarned(badge.id);const userBadge=getEarnedBadge(badge.id);const badgeRarity=getBadgeRarity(badge.badge_type);const badgeIcon=getBadgeIcon(badge.badge_type);return/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,scale:0.8},animate:{opacity:1,scale:1},exit:{opacity:0,scale:0.8},transition:{delay:index*0.1},whileHover:{scale:earned?1.05:0.95,y:earned?-5:0},onClick:()=>setSelectedBadge(badge),className:`relative p-4 rounded-xl border-2 cursor-pointer transition-all ${earned?`${badgeRarity.color} ${badgeRarity.glow} shadow-lg`:'border-gray-200 bg-gray-50 opacity-60'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:`w-16 h-16 mx-auto rounded-full flex items-center justify-center text-3xl ${earned?'bg-white shadow-md':'bg-gray-200'}`,children:earned?badgeIcon:'🔒'}),earned&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute -top-1 -right-1\",children:/*#__PURE__*/_jsx(\"div\",{className:`px-2 py-1 rounded-full text-xs font-bold ${badgeRarity.rarity==='Legendary'?'bg-yellow-400 text-yellow-900':badgeRarity.rarity==='Epic'?'bg-purple-400 text-purple-900':badgeRarity.rarity==='Rare'?'bg-blue-400 text-blue-900':'bg-gray-400 text-gray-900'}`,children:badgeRarity.rarity})}),!earned&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center\",children:/*#__PURE__*/_jsx(Lock,{className:\"w-6 h-6 text-gray-400\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:`font-semibold text-sm mb-1 ${earned?'text-gray-800':'text-gray-500'}`,children:badge.name}),/*#__PURE__*/_jsx(\"p\",{className:`text-xs ${earned?'text-gray-600':'text-gray-400'}`,children:badge.description}),earned&&userBadge&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-green-600 font-medium mt-2\",children:[new Date(userBadge.earned_at).toLocaleDateString('ko-KR'),\" \\uD68D\\uB4DD\"]})]}),earned&&/*#__PURE__*/_jsx(motion.div,{animate:{opacity:[0,1,0],scale:[1,1.2,1]},transition:{duration:2,repeat:Infinity,repeatDelay:3},className:\"absolute top-2 right-2\",children:/*#__PURE__*/_jsx(Star,{className:\"w-4 h-4 text-yellow-400\"})})]},badge.id);})})}),filteredBadges.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(Trophy,{className:\"w-16 h-16 text-gray-300 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-500 mb-2\",children:\"\\uC544\\uC9C1 \\uC774 \\uCE74\\uD14C\\uACE0\\uB9AC\\uC5D0 \\uBC30\\uC9C0\\uAC00 \\uC5C6\\uC5B4\\uC694\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400\",children:\"\\uB2E4\\uB978 \\uCE74\\uD14C\\uACE0\\uB9AC\\uB97C \\uD655\\uC778\\uD574\\uBCF4\\uC138\\uC694!\"})]}),/*#__PURE__*/_jsx(AnimatePresence,{children:selectedBadge&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",onClick:()=>setSelectedBadge(null),children:/*#__PURE__*/_jsx(motion.div,{initial:{scale:0.9,opacity:0},animate:{scale:1,opacity:1},exit:{scale:0.9,opacity:0},onClick:e=>e.stopPropagation(),className:\"bg-white rounded-xl p-6 max-w-md w-full shadow-2xl\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-24 h-24 mx-auto mb-4 rounded-full bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center text-4xl\",children:getBadgeIcon(selectedBadge.badge_type)}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-2xl font-bold text-gray-800 mb-2\",children:selectedBadge.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:selectedBadge.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-lg p-4 mb-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-gray-800 mb-2\",children:\"\\uD68D\\uB4DD \\uC870\\uAC74\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:selectedBadge.criteria||'특정 조건을 달성하면 획득할 수 있습니다.'})]}),isEarned(selectedBadge.id)?/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 border border-green-200 rounded-lg p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center gap-2 text-green-700\",children:[/*#__PURE__*/_jsx(Award,{className:\"w-5 h-5\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold\",children:\"\\uD68D\\uB4DD \\uC644\\uB8CC!\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-green-600 text-sm mt-2\",children:[new Date(getEarnedBadge(selectedBadge.id).earned_at).toLocaleDateString('ko-KR'),\"\\uC5D0 \\uD68D\\uB4DD\"]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center gap-2 text-yellow-700\",children:[/*#__PURE__*/_jsx(Target,{className:\"w-5 h-5\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold\",children:\"\\uB3C4\\uC804\\uD574\\uBCF4\\uC138\\uC694!\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-600 text-sm mt-2\",children:\"\\uC870\\uAC74\\uC744 \\uB2EC\\uC131\\uD558\\uBA74 \\uC774 \\uBA4B\\uC9C4 \\uBC30\\uC9C0\\uB97C \\uC5BB\\uC744 \\uC218 \\uC788\\uC5B4\\uC694\"})]}),/*#__PURE__*/_jsx(motion.button,{whileHover:{scale:1.05},whileTap:{scale:0.95},onClick:()=>setSelectedBadge(null),className:\"mt-6 w-full bg-gray-500 hover:bg-gray-600 text-white font-semibold py-3 px-6 rounded-lg transition-colors\",children:\"\\uB2EB\\uAE30\"})]})})})})]});};export default BadgeCollection;","map":{"version":3,"names":["React","useState","useEffect","motion","AnimatePresence","Trophy","Lock","Star","Calendar","Users","Target","Award","apiService","toast","jsx","_jsx","jsxs","_jsxs","badgeCategories","id","name","icon","color","getBadgeIcon","badgeType","iconMap","getBadgeRarity","rarityMap","rarity","glow","BadgeCollection","_ref","className","badges","setBadges","userBadges","setUserBadges","loading","setLoading","selectedCategory","setSelectedCategory","selectedBadge","setSelectedBadge","fetchBadgeData","badgesResponse","userBadgesResponse","Promise","all","get","data","error","console","getEarnedBadge","badgeId","find","ub","badge","isEarned","filteredBadges","filter","category","earnedCount","length","completionPercentage","Math","round","children","div","initial","width","animate","transition","duration","ease","map","Icon","button","whileHover","scale","whileTap","onClick","index","earned","userBadge","badgeRarity","badge_type","badgeIcon","opacity","exit","delay","y","description","Date","earned_at","toLocaleDateString","repeat","Infinity","repeatDelay","e","stopPropagation","criteria"],"sources":["/Users/kimchung-yeon/인개인개/커서뭐될래/greenflow/frontend/src/components/BadgeCollection.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Trophy, Lock, Star, Calendar, Users, Target, Award } from 'lucide-react';\nimport { Badge, UserBadge } from '../types';\nimport { apiService } from '../services/api';\nimport toast from 'react-hot-toast';\n\ninterface BadgeCollectionProps {\n  className?: string;\n}\n\ninterface BadgeCategory {\n  id: string;\n  name: string;\n  icon: React.ComponentType<{ className?: string }>;\n  color: string;\n}\n\nconst badgeCategories: BadgeCategory[] = [\n  { id: 'all', name: '전체', icon: Trophy, color: 'text-yellow-500' },\n  { id: 'milestones', name: '마일스톤', icon: Target, color: 'text-blue-500' },\n  { id: 'streaks', name: '연속 달성', icon: Calendar, color: 'text-green-500' },\n  { id: 'achievements', name: '특별 성취', icon: Star, color: 'text-purple-500' },\n  { id: 'social', name: '소셜', icon: Users, color: 'text-pink-500' }\n];\n\nconst getBadgeIcon = (badgeType: string): string => {\n  const iconMap: { [key: string]: string } = {\n    'first_meal': '🍽️',\n    'first_swap': '🔄',\n    'week_streak': '📅',\n    'month_streak': '🗓️',\n    'carbon_saver': '🌱',\n    'eco_warrior': '🌍',\n    'challenge_master': '🏆',\n    'social_sharer': '📢',\n    'data_enthusiast': '📊',\n    'consistency_king': '👑',\n    'green_pioneer': '🌿',\n    'impact_maker': '⭐'\n  };\n  return iconMap[badgeType] || '🏅';\n};\n\nconst getBadgeRarity = (badgeType: string): { rarity: string; color: string; glow: string } => {\n  const rarityMap: { [key: string]: { rarity: string; color: string; glow: string } } = {\n    'first_meal': { rarity: 'Common', color: 'border-gray-300 bg-gray-50', glow: 'shadow-gray-200' },\n    'first_swap': { rarity: 'Common', color: 'border-green-300 bg-green-50', glow: 'shadow-green-200' },\n    'week_streak': { rarity: 'Rare', color: 'border-blue-300 bg-blue-50', glow: 'shadow-blue-200' },\n    'month_streak': { rarity: 'Epic', color: 'border-purple-300 bg-purple-50', glow: 'shadow-purple-200' },\n    'carbon_saver': { rarity: 'Rare', color: 'border-green-400 bg-green-100', glow: 'shadow-green-300' },\n    'eco_warrior': { rarity: 'Legendary', color: 'border-yellow-400 bg-yellow-50', glow: 'shadow-yellow-300' },\n    'challenge_master': { rarity: 'Epic', color: 'border-purple-400 bg-purple-100', glow: 'shadow-purple-300' },\n    'social_sharer': { rarity: 'Common', color: 'border-pink-300 bg-pink-50', glow: 'shadow-pink-200' },\n    'data_enthusiast': { rarity: 'Rare', color: 'border-indigo-300 bg-indigo-50', glow: 'shadow-indigo-200' },\n    'consistency_king': { rarity: 'Epic', color: 'border-orange-400 bg-orange-100', glow: 'shadow-orange-300' },\n    'green_pioneer': { rarity: 'Legendary', color: 'border-emerald-400 bg-emerald-100', glow: 'shadow-emerald-300' },\n    'impact_maker': { rarity: 'Legendary', color: 'border-yellow-500 bg-yellow-100', glow: 'shadow-yellow-400' }\n  };\n  return rarityMap[badgeType] || { rarity: 'Common', color: 'border-gray-300 bg-gray-50', glow: 'shadow-gray-200' };\n};\n\nexport const BadgeCollection: React.FC<BadgeCollectionProps> = ({ className = '' }) => {\n  const [badges, setBadges] = useState<Badge[]>([]);\n  const [userBadges, setUserBadges] = useState<UserBadge[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [selectedBadge, setSelectedBadge] = useState<Badge | null>(null);\n\n  useEffect(() => {\n    fetchBadgeData();\n  }, []);\n\n  const fetchBadgeData = async () => {\n    try {\n      const [badgesResponse, userBadgesResponse] = await Promise.all([\n        apiService.get('/api/challenges/badges'),\n        apiService.get('/api/challenges/my-badges')\n      ]);\n      \n      setBadges(badgesResponse.data || []);\n      setUserBadges(userBadgesResponse.data || []);\n    } catch (error) {\n      console.error('Failed to fetch badge data:', error);\n      toast.error('배지 정보를 불러오는데 실패했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getEarnedBadge = (badgeId: number): UserBadge | undefined => {\n    return userBadges.find(ub => ub.badge.id === badgeId);\n  };\n\n  const isEarned = (badgeId: number): boolean => {\n    return !!getEarnedBadge(badgeId);\n  };\n\n  const filteredBadges = badges.filter(badge => {\n    if (selectedCategory === 'all') return true;\n    return badge.category === selectedCategory;\n  });\n\n  const earnedCount = badges.filter(badge => isEarned(badge.id)).length;\n  const completionPercentage = badges.length > 0 ? Math.round((earnedCount / badges.length) * 100) : 0;\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center p-12\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-500\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-white rounded-xl shadow-lg p-6 ${className}`}>\n      {/* 헤더 */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center gap-3 mb-4\">\n          <Trophy className=\"w-8 h-8 text-yellow-500\" />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">배지 컬렉션</h2>\n            <p className=\"text-gray-600\">\n              {earnedCount}/{badges.length} 개 획득 ({completionPercentage}% 완료)\n            </p>\n          </div>\n        </div>\n\n        {/* 진행률 바 */}\n        <div className=\"w-full bg-gray-200 rounded-full h-3 mb-4\">\n          <motion.div\n            initial={{ width: 0 }}\n            animate={{ width: `${completionPercentage}%` }}\n            transition={{ duration: 1, ease: \"easeOut\" }}\n            className=\"bg-gradient-to-r from-green-400 to-blue-500 h-3 rounded-full relative\"\n          >\n            <div className=\"absolute inset-0 bg-white opacity-30 rounded-full animate-pulse\"></div>\n          </motion.div>\n        </div>\n      </div>\n\n      {/* 카테고리 필터 */}\n      <div className=\"flex gap-2 mb-6 overflow-x-auto\">\n        {badgeCategories.map(category => {\n          const Icon = category.icon;\n          return (\n            <motion.button\n              key={category.id}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => setSelectedCategory(category.id)}\n              className={`flex items-center gap-2 px-4 py-2 rounded-lg whitespace-nowrap transition-all ${\n                selectedCategory === category.id\n                  ? 'bg-green-500 text-white shadow-md'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Icon className=\"w-4 h-4\" />\n              <span className=\"text-sm font-medium\">{category.name}</span>\n            </motion.button>\n          );\n        })}\n      </div>\n\n      {/* 배지 그리드 */}\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        <AnimatePresence>\n          {filteredBadges.map((badge, index) => {\n            const earned = isEarned(badge.id);\n            const userBadge = getEarnedBadge(badge.id);\n            const badgeRarity = getBadgeRarity(badge.badge_type);\n            const badgeIcon = getBadgeIcon(badge.badge_type);\n\n            return (\n              <motion.div\n                key={badge.id}\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                transition={{ delay: index * 0.1 }}\n                whileHover={{ scale: earned ? 1.05 : 0.95, y: earned ? -5 : 0 }}\n                onClick={() => setSelectedBadge(badge)}\n                className={`relative p-4 rounded-xl border-2 cursor-pointer transition-all ${\n                  earned \n                    ? `${badgeRarity.color} ${badgeRarity.glow} shadow-lg` \n                    : 'border-gray-200 bg-gray-50 opacity-60'\n                }`}\n              >\n                {/* 배지 아이콘 */}\n                <div className=\"relative mb-3\">\n                  <div className={`w-16 h-16 mx-auto rounded-full flex items-center justify-center text-3xl ${\n                    earned ? 'bg-white shadow-md' : 'bg-gray-200'\n                  }`}>\n                    {earned ? badgeIcon : '🔒'}\n                  </div>\n                  \n                  {/* 등급 표시 */}\n                  {earned && (\n                    <div className=\"absolute -top-1 -right-1\">\n                      <div className={`px-2 py-1 rounded-full text-xs font-bold ${\n                        badgeRarity.rarity === 'Legendary' ? 'bg-yellow-400 text-yellow-900' :\n                        badgeRarity.rarity === 'Epic' ? 'bg-purple-400 text-purple-900' :\n                        badgeRarity.rarity === 'Rare' ? 'bg-blue-400 text-blue-900' :\n                        'bg-gray-400 text-gray-900'\n                      }`}>\n                        {badgeRarity.rarity}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* 잠금 아이콘 */}\n                  {!earned && (\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\n                      <Lock className=\"w-6 h-6 text-gray-400\" />\n                    </div>\n                  )}\n                </div>\n\n                {/* 배지 정보 */}\n                <div className=\"text-center\">\n                  <h3 className={`font-semibold text-sm mb-1 ${earned ? 'text-gray-800' : 'text-gray-500'}`}>\n                    {badge.name}\n                  </h3>\n                  <p className={`text-xs ${earned ? 'text-gray-600' : 'text-gray-400'}`}>\n                    {badge.description}\n                  </p>\n                  \n                  {/* 획득 날짜 */}\n                  {earned && userBadge && (\n                    <p className=\"text-xs text-green-600 font-medium mt-2\">\n                      {new Date(userBadge.earned_at).toLocaleDateString('ko-KR')} 획득\n                    </p>\n                  )}\n                </div>\n\n                {/* 반짝이는 효과 (획득한 배지) */}\n                {earned && (\n                  <motion.div\n                    animate={{ \n                      opacity: [0, 1, 0],\n                      scale: [1, 1.2, 1]\n                    }}\n                    transition={{ \n                      duration: 2,\n                      repeat: Infinity,\n                      repeatDelay: 3\n                    }}\n                    className=\"absolute top-2 right-2\"\n                  >\n                    <Star className=\"w-4 h-4 text-yellow-400\" />\n                  </motion.div>\n                )}\n              </motion.div>\n            );\n          })}\n        </AnimatePresence>\n      </div>\n\n      {/* 빈 상태 */}\n      {filteredBadges.length === 0 && (\n        <div className=\"text-center py-12\">\n          <Trophy className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-semibold text-gray-500 mb-2\">\n            아직 이 카테고리에 배지가 없어요\n          </h3>\n          <p className=\"text-gray-400\">\n            다른 카테고리를 확인해보세요!\n          </p>\n        </div>\n      )}\n\n      {/* 배지 상세 모달 */}\n      <AnimatePresence>\n        {selectedBadge && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\n            onClick={() => setSelectedBadge(null)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              onClick={(e) => e.stopPropagation()}\n              className=\"bg-white rounded-xl p-6 max-w-md w-full shadow-2xl\"\n            >\n              <div className=\"text-center\">\n                <div className=\"w-24 h-24 mx-auto mb-4 rounded-full bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center text-4xl\">\n                  {getBadgeIcon(selectedBadge.badge_type)}\n                </div>\n                \n                <h3 className=\"text-2xl font-bold text-gray-800 mb-2\">\n                  {selectedBadge.name}\n                </h3>\n                \n                <p className=\"text-gray-600 mb-4\">\n                  {selectedBadge.description}\n                </p>\n\n                <div className=\"bg-gray-50 rounded-lg p-4 mb-4\">\n                  <h4 className=\"font-semibold text-gray-800 mb-2\">획득 조건</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    {selectedBadge.criteria || '특정 조건을 달성하면 획득할 수 있습니다.'}\n                  </p>\n                </div>\n\n                {isEarned(selectedBadge.id) ? (\n                  <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-center gap-2 text-green-700\">\n                      <Award className=\"w-5 h-5\" />\n                      <span className=\"font-semibold\">획득 완료!</span>\n                    </div>\n                    <p className=\"text-green-600 text-sm mt-2\">\n                      {new Date(getEarnedBadge(selectedBadge.id)!.earned_at).toLocaleDateString('ko-KR')}에 획득\n                    </p>\n                  </div>\n                ) : (\n                  <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-center gap-2 text-yellow-700\">\n                      <Target className=\"w-5 h-5\" />\n                      <span className=\"font-semibold\">도전해보세요!</span>\n                    </div>\n                    <p className=\"text-yellow-600 text-sm mt-2\">\n                      조건을 달성하면 이 멋진 배지를 얻을 수 있어요\n                    </p>\n                  </div>\n                )}\n\n                <motion.button\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={() => setSelectedBadge(null)}\n                  className=\"mt-6 w-full bg-gray-500 hover:bg-gray-600 text-white font-semibold py-3 px-6 rounded-lg transition-colors\"\n                >\n                  닫기\n                </motion.button>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default BadgeCollection; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}