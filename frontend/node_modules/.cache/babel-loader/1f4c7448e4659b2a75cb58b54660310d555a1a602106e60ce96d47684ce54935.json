{"ast":null,"code":"import axios from'axios';class ApiService{constructor(){this.api=void 0;// Determine API URL based on environment with comprehensive detection\nconst getApiUrl=()=>{// Check if we're on any Vercel deployment\nconst hostname=window.location.hostname;const isVercelDeploy=hostname.includes('vercel.app')||hostname.includes('vercel.com');// Production: use Render backend for any Vercel deployment\nif(isVercelDeploy){console.log('🚀 Detected Vercel deployment, using production API');return'https://greenflow-life.onrender.com/api';}// Development: use environment variable or localhost\nconst devUrl=process.env.REACT_APP_API_URL||'http://localhost:8000/api';console.log('🔧 Using development API:',devUrl);return devUrl;};this.api=axios.create({baseURL:getApiUrl(),headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\nthis.api.interceptors.request.use(config=>{const token=localStorage.getItem('access_token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});// Response interceptor for error handling\nthis.api.interceptors.response.use(response=>response,error=>{var _error$response,_error$response2;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){console.log('🔑 Authentication failed - redirecting to login');localStorage.removeItem('access_token');// Only redirect if not already on login page\nif(!window.location.pathname.includes('onboarding')){window.location.href='/onboarding';}}else if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===403){console.log('🚫 Access forbidden - token may be invalid');localStorage.removeItem('access_token');// Only redirect if not already on login page\nif(!window.location.pathname.includes('onboarding')){window.location.href='/onboarding';}}return Promise.reject(error);});}// Authentication\nasync login(credentials){const response=await this.api.post('/auth/login',credentials);localStorage.setItem('access_token',response.data.access_token);return response.data;}async register(userData){const response=await this.api.post('/auth/register',userData);localStorage.setItem('access_token',response.data.access_token);return response.data;}async getCurrentUser(){const response=await this.api.get('/auth/me');return response.data;}logout(){localStorage.removeItem('access_token');}// Meals\nasync createMealLog(mealData){const response=await this.api.post('/meals/',mealData);return response.data;}async getMealLogs(){let skip=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:50;const response=await this.api.get(`/meals/?skip=${skip}&limit=${limit}`);return response.data;}async getMealLog(mealId){const response=await this.api.get(`/meals/${mealId}`);return response.data;}// Carbon footprint\nasync calculateCarbonFootprint(data){const response=await this.api.post('/footprint/calculate',data);return response.data;}async getDailyCarbonSummary(){let days=arguments.length>0&&arguments[0]!==undefined?arguments[0]:7;const response=await this.api.get(`/footprint/daily-summary?days=${days}`);return response.data;}// Dashboard\nasync getDashboardData(){const response=await this.api.get('/dashboard/');return response.data;}// Swaps\nasync getSwapRecommendations(mealId){const response=await this.api.get(`/swaps/${mealId}`);return response.data;}async acceptSwapRecommendation(swapId,accepted){const response=await this.api.post('/swaps/accept',{swap_id:swapId,accepted});return response.data;}// Challenges\nasync getAvailableChallenges(){const response=await this.api.get('/challenges/available');return response.data;}async getMyChallenges(){const response=await this.api.get('/challenges/my-challenges');return response.data;}async joinChallenge(challengeId){const response=await this.api.post('/challenges/join',{challenge_id:challengeId});return response.data;}async updateChallengeProgress(challengeId,progressValue){const response=await this.api.patch('/challenges/update-progress',{challenge_id:challengeId,progress_value:progressValue});return response.data;}// Generic GET method\nasync get(url){const response=await this.api.get(url);return response.data;}// Generic POST method\nasync post(url,data){const response=await this.api.post(url,data);return response.data;}// Badges\nasync getBadges(){const response=await this.api.get('/gamification/badges');return response.data;}async getUserBadges(){const response=await this.api.get('/gamification/my-badges');return response.data;}}export const apiService=new ApiService();","map":{"version":3,"names":["axios","ApiService","constructor","api","getApiUrl","hostname","window","location","isVercelDeploy","includes","console","log","devUrl","process","env","REACT_APP_API_URL","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","_error$response2","status","removeItem","pathname","href","Promise","reject","login","credentials","post","setItem","data","access_token","register","userData","getCurrentUser","get","logout","createMealLog","mealData","getMealLogs","skip","arguments","length","undefined","limit","getMealLog","mealId","calculateCarbonFootprint","getDailyCarbonSummary","days","getDashboardData","getSwapRecommendations","acceptSwapRecommendation","swapId","accepted","swap_id","getAvailableChallenges","getMyChallenges","joinChallenge","challengeId","challenge_id","updateChallengeProgress","progressValue","patch","progress_value","url","getBadges","getUserBadges","apiService"],"sources":["/Users/kimchung-yeon/인개인개/커서뭐될래/greenflow/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosInstance } from 'axios';\nimport {\n  AuthResponse,\n  LoginRequest,\n  RegisterRequest,\n  User,\n  MealLog,\n  MealCreate,\n  CarbonCalculationRequest,\n  CarbonCalculationResponse,\n  DashboardData,\n  SwapResponse,\n  Challenge,\n  UserChallenge\n} from '../types';\n\nclass ApiService {\n  private api: AxiosInstance;\n\n  constructor() {\n    // Determine API URL based on environment with comprehensive detection\n    const getApiUrl = () => {\n      // Check if we're on any Vercel deployment\n      const hostname = window.location.hostname;\n      const isVercelDeploy = hostname.includes('vercel.app') || hostname.includes('vercel.com');\n      \n      // Production: use Render backend for any Vercel deployment\n      if (isVercelDeploy) {\n        console.log('🚀 Detected Vercel deployment, using production API');\n        return 'https://greenflow-life.onrender.com/api';\n      }\n      \n      // Development: use environment variable or localhost\n      const devUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n      console.log('🔧 Using development API:', devUrl);\n      return devUrl;\n    };\n\n    this.api = axios.create({\n      baseURL: getApiUrl(),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    // Request interceptor to add auth token\n    this.api.interceptors.request.use((config) => {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    });\n\n    // Response interceptor for error handling\n    this.api.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          console.log('🔑 Authentication failed - redirecting to login');\n          localStorage.removeItem('access_token');\n          // Only redirect if not already on login page\n          if (!window.location.pathname.includes('onboarding')) {\n            window.location.href = '/onboarding';\n          }\n        } else if (error.response?.status === 403) {\n          console.log('🚫 Access forbidden - token may be invalid');\n          localStorage.removeItem('access_token');\n          // Only redirect if not already on login page\n          if (!window.location.pathname.includes('onboarding')) {\n            window.location.href = '/onboarding';\n          }\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  // Authentication\n  async login(credentials: LoginRequest): Promise<AuthResponse> {\n    const response = await this.api.post<AuthResponse>('/auth/login', credentials);\n    localStorage.setItem('access_token', response.data.access_token);\n    return response.data;\n  }\n\n  async register(userData: RegisterRequest): Promise<AuthResponse> {\n    const response = await this.api.post<AuthResponse>('/auth/register', userData);\n    localStorage.setItem('access_token', response.data.access_token);\n    return response.data;\n  }\n\n  async getCurrentUser(): Promise<User> {\n    const response = await this.api.get<User>('/auth/me');\n    return response.data;\n  }\n\n  logout(): void {\n    localStorage.removeItem('access_token');\n  }\n\n  // Meals\n  async createMealLog(mealData: MealCreate): Promise<MealLog> {\n    const response = await this.api.post<MealLog>('/meals/', mealData);\n    return response.data;\n  }\n\n  async getMealLogs(skip: number = 0, limit: number = 50): Promise<MealLog[]> {\n    const response = await this.api.get<MealLog[]>(`/meals/?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n\n  async getMealLog(mealId: number): Promise<MealLog> {\n    const response = await this.api.get<MealLog>(`/meals/${mealId}`);\n    return response.data;\n  }\n\n  // Carbon footprint\n  async calculateCarbonFootprint(data: CarbonCalculationRequest): Promise<CarbonCalculationResponse> {\n    const response = await this.api.post<CarbonCalculationResponse>('/footprint/calculate', data);\n    return response.data;\n  }\n\n  async getDailyCarbonSummary(days: number = 7): Promise<any[]> {\n    const response = await this.api.get(`/footprint/daily-summary?days=${days}`);\n    return response.data;\n  }\n\n  // Dashboard\n  async getDashboardData(): Promise<DashboardData> {\n    const response = await this.api.get<DashboardData>('/dashboard/');\n    return response.data;\n  }\n\n  // Swaps\n  async getSwapRecommendations(mealId: number): Promise<SwapResponse> {\n    const response = await this.api.get<SwapResponse>(`/swaps/${mealId}`);\n    return response.data;\n  }\n\n  async acceptSwapRecommendation(swapId: number, accepted: boolean): Promise<any> {\n    const response = await this.api.post('/swaps/accept', { swap_id: swapId, accepted });\n    return response.data;\n  }\n\n  // Challenges\n  async getAvailableChallenges(): Promise<Challenge[]> {\n    const response = await this.api.get<Challenge[]>('/challenges/available');\n    return response.data;\n  }\n\n  async getMyChallenges(): Promise<UserChallenge[]> {\n    const response = await this.api.get<UserChallenge[]>('/challenges/my-challenges');\n    return response.data;\n  }\n\n  async joinChallenge(challengeId: number): Promise<any> {\n    const response = await this.api.post('/challenges/join', { challenge_id: challengeId });\n    return response.data;\n  }\n\n  async updateChallengeProgress(challengeId: number, progressValue: number): Promise<any> {\n    const response = await this.api.patch('/challenges/update-progress', {\n      challenge_id: challengeId,\n      progress_value: progressValue\n    });\n    return response.data;\n  }\n\n  // Generic GET method\n  async get<T = any>(url: string): Promise<T> {\n    const response = await this.api.get<T>(url);\n    return response.data;\n  }\n\n  // Generic POST method\n  async post<T = any>(url: string, data?: any): Promise<T> {\n    const response = await this.api.post<T>(url, data);\n    return response.data;\n  }\n\n  // Badges\n  async getBadges(): Promise<any[]> {\n    const response = await this.api.get('/gamification/badges');\n    return response.data;\n  }\n\n  async getUserBadges(): Promise<any[]> {\n    const response = await this.api.get('/gamification/my-badges');\n    return response.data;\n  }\n}\n\nexport const apiService = new ApiService(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}